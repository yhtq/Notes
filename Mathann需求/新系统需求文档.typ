#import "../template.typ": *
#show : note.with(
    withOutlined: false,
    withTitle: false
)
= 新系统
  == 需求
    == 功能缺失
      // + 系统崩溃
      + *任务分段逻辑（重要）*\
        目前给出的任务分阶段提交逻辑的执行方案：每个任务分成三个阶段，
        - A：自然语言题面翻译成 Lean 题面
        - B：设计 sub goal （包括以 sorry 完成的 have 引理和 lemma 等）并给出对应的行间注释
        - C：完成 Lean 代码书写 
        需要系统完成的功能：
        - *三个单选框，分别标记 A, B, C 三阶段是否完成。单选框在学生提交页面和助教批改页面都出现，学生/助教均可选 Todo, In Progress, Done，在整个任务完成前（助教整个任务对应的状态框中选择 Done），所有分阶段选项都可任意修改。*
        - 单选框放在打分的同一行
        - 学生首次回答时默认选项为 Todo。在学生回答 $->$ 助教批阅循环中，每次单选框的默认选项应当是前一个环节给出的选项。
        - 学生的每次回答，也就是每次学生回应助教给出的 Resubmit 时，都在回答中记录三阶段的完成状态（这个状态是助教给出 Resubmit 的批阅环节时给出的选项）。
        - 在简略信息中，也应当分别显示最新的三阶段的完成状态。
        - *整个任务的完成逻辑仍然保留之前的逻辑不变，也即当且仅当助教在 "Resubmit", "Revise", "Done" 中选择 "Done" 时，整个任务完成。*
        - 移除“完成任务”，整个任务完成即关闭，所有选项均不可修改。
      + *改进并增加 Comment 功能（重要）*
        - 所有的题目、任务、以及每次学生提交、助教批注活动都附带各自的 Comments（题目的 Comments 就是此前创建题目页面的“备注”对应内容）。
        - 在发布任务页面增加输入任务对应 Comments 的文本框，应当默认填入该任务对应题目的 Comments。
        - 在学生答题、助教批注两个页面增加输入本次活动对应 Comments 文本框。
        - 所有查看每次提交回答信息的页面显示此次学生提交——助教批阅活动助教和学生的 Comments。
        - 现有题目对应“提示及约束”窗体应当全部改为显示任务对应的 Comment，窗体名直接改为 Comments 即可。题目的 Comments 只在发布任务时充当默认的 Comments，不在其他任务信息窗口显示。
      + *每个包含任务的回答的信息页面应当从前往后显示每次学生被助教选择“重新提交”(Resubmit) 的回答。* 最终完成后，显示以上所有回答和最终完成的回答。现在是通过后才显示（*待复现*）。
      + 在助教批阅、学生查看任务的任务列表界面，增加刷新列表按钮，重置按钮更换图标。
      + 统计功能（不紧急），我们需要的统计信息包括：
        - 对于学生端，学生个人的总 Done, Resubmit, Revise, Pending Review，最好能按题目的 Lean 难度各自统计。*在统计功能完成前，不要在学生端显示统计页面* 。
        - 对于助教端，并不统计助教的数据，而是既可以查看所有学生各自的统计信息，也可以查看全局统计信息，即所有学生的总 Done, Resubmit, Revise, Pending Review，最好能按题目的 Lean 难度各自统计 。
        - 重点是对齐文老师需求
      + 系统内部的修改 tag 功能（文老师需求）
    == 重要改进
      + *解决 Markdown 渲染问题*，包括：
        - 在新建题目或者查看已发布任务的 Markdown 渲染结果中 \\frac 不显示分数线（但显示了上下位置）
        - 数学字体不是斜体
      + *学生做题并提交答案时，允许 Comments, Informal Proof, Formal Proof 文本框中某个或某几个内容为空，但不允许所有文均空。*
      // + 助教选择 Revise 和 Resubmit 之后，要在学生端和助教端的任务列表的简略信息中显示出来 "Revise" 或 "Resubmit" 的状态。助教未批改时，状态名为 "Pending Review"。
      + *任务状态改动"已提交" 改为 "Pending Review"，去掉 "已批阅"，增加 "Resubmitting", "Revising" *
      + *为助教批阅界面的学生回答中的 Formal Proof 框增加一键复制按钮，点击后自动复制代码框内容到剪切板*。
      + Informal Proof 文本框允许同时显示源代码和 Markdown 预览。书写界面默认显示源码，但设置按键打开新窗口显示预览结果；所有展示界面（包括助教批阅时学生给出的 Informal Answer，现在显示的是源代码且不必要的显示了行号）默认显示预览结果，但设置按键打开新窗口显示源码。
      + 调整删除题目/任务的逻辑。我们希望删除题目/任务时，如果没有该题目对应任务对应的学生提交，则彻底删除（也即删除题目连带删除所有任务）；如果有（无论处于何种状态，包括未批改和完成），则不能删除题目和任务，只隐藏即可（删除题目时两者都隐藏），现有回答的交互应当可以正常进行（测试发现这与现有的行为应该比较接近，但有一些小问题，例如学生作答页面如果题目已被删除则会显示为空）。*根本逻辑是保证允许删除（撤销）题目和任务，但一旦学生提交回答，则后续交互必须正常完成，但其他学生不能再作答*
      + 中文版时，操作用词统一到英文。“修改”改为 "Revise"，“重新提交”改为 "Resubmit"，（助教给出的）“建议”改为 "Suggestion" 。
      + 助教筛选任务时，按姓名检索学生改成直接按照字段检索（模糊检索）即可。参照翁系统实现
      + *任务改成任务池的逻辑，与助教解绑*，助教可以查看所有学生的任务。
      + Lean 代码高亮。如果暂时不能实现，改为不高亮。
    == 次要改进
      // + 助教发布任务时，默认的助教选项设为助教自己。
      // + 助教筛选任务时，添加按照学生所属团队检索的功能。
      + 助教的默认给分改成五分。
      + 学生第一次做题时，取消“学生尚未作答”的框体，空间留给文本框即可。输入文本框拉高，至少十行左右。
      + 学生做题时，文本框默认的“请 informal proof 信息”和 “请 formal proof 信息”改为 "Informal Proof" 和 "Formal Proof"。
      + 题目编号栏没有必要存在。
      + 题目类型允许空。
      + 题目的数学难度和 Lean 难度默认为 "easy"。
      // + 允许将关闭的任务撤回未关闭状态。