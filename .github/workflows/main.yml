name: Render papers
on: push
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.list.outputs.files }}
    steps:
      - uses: actions/checkout@v4
      - name: List main.typ files
        id: list
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y jq
          mapfile -t files < <(find . -type f -name 'main.typ' -not -path './.github/*' -print)
          if [ ${#files[@]} -eq 0 ]; then
            echo "files=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          # 去掉开头的 ./ 并生成 JSON array of objects {path, dir, name}
          json=$(printf '%s\n' "${files[@]}" | sed 's|^\./||' | jq -R -s 'split("\n")[:-1] | map({path: ., dir: (.|split("/")[:-1]|join("/")), name: (.|split("/")|.[-2])})')
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$json" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  render:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.prepare.outputs.files) }}
    steps:
      - uses: actions/checkout@v4

      - uses: fontist/setup-fontist@v2.0.1
        with:
          fontist-version: 1.x
      - run: fontist install "Noto Serif CJK SC"

      - uses: typst-community/setup-typst@v4
        with:
          allow-prereleases: true

      - name: Compile single main.typ
        run: |
          set -eux
          # matrix.file is an object with fields path, dir, name
          echo "Compiling ${{ matrix.file.path }} (dir=${{ matrix.file.dir }}, name=${{ matrix.file.name }})"
          mkdir -p out
          typst compile "${{ matrix.file.path }}" --root . --font-path ~/.fontist/fonts
          if [ -f "${{ matrix.file.dir }}/main.pdf" ]; then
            cp "${{ matrix.file.dir }}/main.pdf" "out/${{ matrix.file.name }}.pdf"
          else
            echo "Warning: ${{ matrix.file.dir }}/main.pdf not produced"
            # 不上传空文件，直接退出 0
            exit 0
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.file.name }}
          path: out/${{ matrix.file.name }}.pdf


